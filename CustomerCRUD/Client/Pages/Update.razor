@page "/customer/update/{id:int}"
@using CustomerCRUD.Shared
@using static CustomerCRUD.Shared.Customer;
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Modificar Cliente</h3>

@if (_customer == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="@_customer" OnValidSubmit="Put">
        <div class="form-group">
            <label>Nombre: </label>
            <InputText @bind-Value="_customer.Name" />
        </div>
        <div class="form-group">
            <label>Apellidos</label>
            <InputTextArea @bind-Value="_customer.Surname" />
        </div>
        <div class="form-group">
            <label>Sexo: </label>
            <InputRadioGroup @bind-Value="_customer.Gender">
                @foreach (var gender in (GenderEnum[])Enum.GetValues(typeof(GenderEnum)))
                {
                    <InputRadio Value="gender" />
                    <text>&nbsp;</text>

                    @gender

                    <br>
                }
            </InputRadioGroup>
        </div>
        <div class="form-group">
            <label>Fecha de Nacimiento: </label>
            <InputDate @bind-Value="_customer.BirthDate" />
        </div>
        <div class="form-group">
            <label>Dirección: </label>
            <InputTextArea @bind-Value="_customer.Address" />
        </div>
        <div class="form-group">
            <label>País: </label>
            <InputText @bind-Value="_customer.Country" />
        </div>
        <div class="form-group">
            <label>Código Postal: </label>
            <InputNumber @bind-Value="_customer.PostalCode" />
        </div>
        <div class="form-group">
            <label>Email: </label>
            <InputText @bind-Value="_customer.Email" />
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Editar pelicula" />
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private Customer _customer = null;
    protected override async Task OnInitializedAsync()
    {
        _customer = await Http.GetFromJsonAsync<Customer>($"/customer/{Id}");
    }
    private async Task Put()
    {
        await Http.PutAsJsonAsync<Customer>($"/customer/", _customer);
        Navigation.NavigateTo("/Customers");
    }
}