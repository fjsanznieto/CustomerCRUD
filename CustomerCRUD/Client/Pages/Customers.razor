@page "/customers"
@using CustomerCRUD.Shared
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Clientes</PageTitle>

<h1>Clientes</h1>

<p>Este componente demuestra el tratamiento de datos desde/hacia el servidor.</p>

@if (customers == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Apellidos</th>
                <th>Sexo</th>
                <th>Fecha de Nacimiento</th>
                <th>Dirección</th>
                <th>País</th>
                <th>Código Postal</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Surname</td>
                    <td>@customer.Gender</td>
                    <td>@customer.BirthDate.Date</td>
                    <td>@customer.Address</td>
                    <td>@customer.Country</td>
                    <td>@customer.PostalCode</td>
                    <td>@customer.Email</td>
                    <td>
                        <button class="btn btn-info"
                        @onclick="(() => Update(customer.Id))">
                            Editar
                        </button>
                        <button class="btn btn-danger"
                        @onclick="(() => Delete(customer.Id))">
                            Borrar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <button class="btn btn-success" @onclick="Create">Añadir Cliente</button>
    </div>
}

@code {
    private Customer[]? customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await Http.GetFromJsonAsync<Customer[]>("Customer");
    }

    private async Task Delete(int id)
    {
        await Http.DeleteAsync($"/customer/{id}");
        customers = await Http.GetFromJsonAsync<Customer[]>("Customer");
        StateHasChanged();
    }
    private void Update(int id)
    {
        Navigation.NavigateTo($"/customer/update/{id}");
    }
    private void Create()
    {
        Navigation.NavigateTo("/customer/create");
    }
}
